// Settings for the grid - change if necessary

@default-max-width: 980px;
@default-min-width: 727px;
@gutter: 4.4%;
@generate-nonsemantic-grid-classes: true;

// End of configuration - do not change below this line unLESS... ;] -----------

// @TODO check the future releases of LESS.js: do we _really_ need to clutter the global scope?
@one-col-width:     (100% - 11 * @gutter) / 12;
@two-col-width:     @one-col-width * 2 + @gutter;
@three-col-width:   @one-col-width * 3 + @gutter * 2;
@four-col-width:    @one-col-width * 4 + @gutter * 3;
@five-col-width:    @one-col-width * 5 + @gutter * 4;
@six-col-width:     @one-col-width * 6 + @gutter * 5;
@seven-col-width:   @one-col-width * 7 + @gutter * 6;
@eight-col-width:   @one-col-width * 8 + @gutter * 7;
@nine-col-width:    @one-col-width * 9 + @gutter * 8;
@ten-col-width:     @one-col-width * 10 + @gutter * 9;
@eleven-col-width:  @one-col-width * 11 + @gutter * 10;
@twelve-col-width:  @one-col-width * 12 + @gutter * 11;

#grid {
  .col () {
    #grid > .col-gutter();
    float: left;
    min-height: 1px;
    position: relative;
    &:first-child {
      #grid > .col-no-gutter();
    }
  }

  .col-gutter () {
    margin-left: @gutter;
  }

  .col-no-gutter () {
    margin-left: 0;
  }

  .row (@min-width: @default-min-width, @max-width: @default-max-width) {
    width: 100%;
    max-width: @max-width;
    min-width: @min-width;
    margin: 0 auto;
    overflow: auto;
  }

  .subrow () {
    min-width: 0;
  }

  .centered () {
    float: none;
    margin: 0 auto;
  }

  .one-col-width ()     { width: @one-col-width; }
  .two-col-width ()     { width: @two-col-width;  }
  .three-col-width ()   { width: @three-col-width; }
  .four-col-width ()    { width: @four-col-width; }
  .five-col-width ()    { width: @five-col-width; }
  .six-col-width ()     { width: @six-col-width; }
  .seven-col-width ()   { width: @seven-col-width;  }
  .eight-col-width ()   { width: @eight-col-width; }
  .nine-col-width ()    { width: @nine-col-width; }
  .ten-col-width ()     { width: @ten-col-width; }
  .eleven-col-width ()  { width: @eleven-col-width; }
  .twelve-col-width ()  { width: @twelve-col-width; }

  .one-col ()     { #grid > .col(); #grid > .one-col-width(); }
  .two-col ()     { #grid > .col(); #grid > .two-col-width();  }
  .three-col ()   { #grid > .col(); #grid > .three-col-width(); }
  .four-col ()    { #grid > .col(); #grid > .four-col-width(); }
  .five-col ()    { #grid > .col(); #grid > .five-col-width(); }
  .six-col ()     { #grid > .col(); #grid > .six-col-width(); }
  .seven-col ()   { #grid > .col(); #grid > .seven-col-width();  }
  .eight-col ()   { #grid > .col(); #grid > .eight-col-width(); }
  .nine-col ()    { #grid > .col(); #grid > .nine-col-width(); }
  .ten-col ()     { #grid > .col(); #grid > .ten-col-width(); }
  .eleven-col ()  { #grid > .col(); #grid > .eleven-col-width(); }
  .twelve-col ()  { #grid > .col(); #grid > .twelve-col-width(); }

  .offset-by-one () {
    margin-left: @one-col-width + @gutter * 2;
    &:first-child { margin-left: @one-col-width + @gutter; }
  }

  .offset-by-two () {
    margin-left: (@one-col-width + @gutter) * 2 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 2; }
  }

  .offset-by-three () {
    margin-left: (@one-col-width + @gutter) * 3 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 3; }
  }

  .offset-by-four () {
    margin-left: (@one-col-width + @gutter) * 4 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 4; }
  }

  .offset-by-five () {
    margin-left: (@one-col-width + @gutter) * 5 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 5; }
  }

  .offset-by-six () {
    margin-left: (@one-col-width + @gutter) * 6 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 6; }
  }

  .offset-by-seven () {
    margin-left: (@one-col-width + @gutter) * 7 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 7; }
  }

  .offset-by-eight () {
    margin-left: (@one-col-width + @gutter) * 8 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 8; }
  }

  .offset-by-nine () {
    margin-left: (@one-col-width + @gutter) * 9 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 9; }
  }

  .offset-by-ten () {
    margin-left: (@one-col-width + @gutter) * 10 + @gutter;
    &:first-child { margin-left: (@one-col-width + @gutter) * 10; }
  }

  .offset-by-eleven () {
    &:first-child { margin-left: (@one-col-width + @gutter) * 11; }
  }

  .push-one ()    { left: @one-col-width + @gutter; }
  .push-two ()    { left: (@one-col-width + @gutter) * 2; }
  .push-three ()  { left: (@one-col-width + @gutter) * 3; }
  .push-four ()   { left: (@one-col-width + @gutter) * 4; }
  .push-five ()	  { left: (@one-col-width + @gutter) * 5; }
  .push-six ()	  { left: (@one-col-width + @gutter) * 6; }
  .push-seven ()  { left: (@one-col-width + @gutter) * 7; }
  .push-eight ()  { left: (@one-col-width + @gutter) * 8; }
  .push-nine ()   { left: (@one-col-width + @gutter) * 9; }
  .push-ten ()    { left: (@one-col-width + @gutter) * 10; }
  .push-eleven () { left: (@one-col-width + @gutter) * 11; }
  .push-n (@n) when (isnumber(@n)) {
    left: (@one-col-width + @gutter) * @n;
  }

  .pull-one ()    { right: @one-col-width + @gutter; }
  .pull-two ()    { right: (@one-col-width + @gutter) * 2; }
  .pull-three ()  { right: (@one-col-width + @gutter) * 3; }
  .pull-four ()   { right: (@one-col-width + @gutter) * 4; }
  .pull-five ()	  { right: (@one-col-width + @gutter) * 5; }
  .pull-six ()	  { right: (@one-col-width + @gutter) * 6; }
  .pull-seven ()  { right: (@one-col-width + @gutter) * 7; }
  .pull-eight ()  { right: (@one-col-width + @gutter) * 8; }
  .pull-nine ()   { right: (@one-col-width + @gutter) * 9; }
  .pull-ten ()    { right: (@one-col-width + @gutter) * 10; }
  .pull-eleven () { right: (@one-col-width + @gutter) * 11; }
  .pull-n (@n) when (isnumber(@n)) {
    right: (@one-col-width + @gutter) * @n;
  }

  // Non-semantic grid classes
  //
  // If you don't need them, disable via the switch at the beginning of this file.
  .non-semantic-grid (@enable) when (@enable = true) {
    .grid {
      .row            { #grid > .row(); }
      .subrow         { #grid > .subrow(); }
      .centered       { #grid > .centered(); }

      .one.columns    { #grid > .one-col(); }
      .two.columns    { #grid > .two-col(); }
      .three.columns  { #grid > .three-col(); }
      .four.columns   { #grid > .four-col(); }
      .five.columns   { #grid > .five-col(); }
      .six.columns    { #grid > .six-col(); }
      .seven.columns  { #grid > .seven-col(); }
      .eight.columns  { #grid > .eight-col(); }
      .nine.columns   { #grid > .nine-col(); }
      .ten.columns    { #grid > .ten-col(); }
      .eleven.columns { #grid > .eleven-col(); }
      .twelve.columns { #grid > .twelve-col(); }

      .row .columns {
        &.offset-by-one    { #grid > .offset-by-one(); }
        &.offset-by-two    { #grid > .offset-by-two(); }
        &.offset-by-three  { #grid > .offset-by-three(); }
        &.offset-by-four   { #grid > .offset-by-four(); }
        &.offset-by-five   { #grid > .offset-by-five(); }
        &.offset-by-six    { #grid > .offset-by-six(); }
        &.offset-by-seven  { #grid > .offset-by-seven(); }
        &.offset-by-eight  { #grid > .offset-by-eight(); }
        &.offset-by-nine   { #grid > .offset-by-nine(); }
        &.offset-by-ten    { #grid > .offset-by-ten(); }
        &.offset-by-eleven { #grid > .offset-by-eleven(); }
      }

      .push-one    { #grid > .push-one(); }
      .push-two    { #grid > .push-two(); }
      .push-three  { #grid > .push-three(); }
      .push-four   { #grid > .push-four(); }
      .push-five   { #grid > .push-five(); }
      .push-six    { #grid > .push-six(); }
      .push-seven  { #grid > .push-seven(); }
      .push-eight  { #grid > .push-eight(); }
      .push-nine   { #grid > .push-nine(); }
      .push-ten    { #grid > .push-ten(); }
      .push-eleven { #grid > .push-eleven(); }
    
      .pull-one    { #grid > .pull-one(); }
      .pull-two    { #grid > .pull-two(); }
      .pull-three  { #grid > .pull-three(); }
      .pull-four   { #grid > .pull-four(); }
      .pull-five   { #grid > .pull-five(); }
      .pull-six    { #grid > .pull-six(); }
      .pull-seven  { #grid > .pull-seven(); }
      .pull-eight  { #grid > .pull-eight(); }
      .pull-nine   { #grid > .pull-nine(); }
      .pull-ten    { #grid > .pull-ten(); }
      .pull-eleven { #grid > .pull-eleven(); }
    }
  }
}

#grid > .non-semantic-grid(@generate-nonsemantic-grid-classes);
